what is State?

UI=F(state)

state is the values of all the variables togheter make up the user interface
/////////////////////////////////////////////////////

use Provider.of<TaskData>(context) to access the global data

///////////////////////////////////////////call back check vid 201

import 'package:flutter/material.dart';
//vidoe 200 stateme manage ment
//esentailly callbacks check things learned
class TaskTile extends StatefulWidget {
  @override
  _TaskTileState createState() => _TaskTileState();
}

class _TaskTileState extends State<TaskTile> {

  bool isChecked=false;
  String strTask;

  void checkboxCallback(bool checkboxState){

    // so esentially onchanged in TaskCheckBox class will get updated by this method the ischecked
    setState(() {
      isChecked=checkboxState;
    });
  }


  @override
  Widget build(BuildContext context) {
    return ListTile(
      //allows us to create a re-usable tile which has a property such as the title etc
      title: Text('CALL JULIE',
        style: TextStyle(
          // if false put a line through if not leave it
          decoration: isChecked ? TextDecoration.lineThrough : null
        ),
      ),
      // the resaon checkboxCallback doesn't need a parameter is cause it's actually
      //on the onchanged in TaskcheckBox the the function is actually () (new value)
      //and we handle the newvalue inside the setSetate in checkboxcallback
      trailing: TaskCheckBox(isChecked,checkboxCallback),
      );
  }
}

class TaskCheckBox extends StatelessWidget {

  final bool checkboxState;
  final Function toggleCheckboxState;

  TaskCheckBox(this.checkboxState,this.toggleCheckboxState);

  @override
  Widget build(BuildContext context) {
    return Checkbox(
      activeColor: Colors.lightBlueAccent,
      value: checkboxState,
      onChanged: toggleCheckboxState,
    );
  }
}
